#######
#v0.1.3
#######
[menu __main]
type: list
name: MAIN MENU
############################################################################################################
### MAIN MENU ###
############################################################################################################
[menu __main __octoprint] 
type: disabled
name: Octoprint

[menu __main __mainsail]
type: list
enable: {printer.idle_timeout.state != "Printing"}
name: Print
index: 4

[menu __main __control]
type: list
name: Control

[menu __main __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: Gcodes

[menu __main __setup]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Setting

[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Tune

[menu __main __temp]
type: list
name: Temperature

[menu __main __filament]
type: list
name: Filament

[menu __main __pause]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing")}
name: Pause print
index: 1
gcode:   
    _LED_BLIK
    PAUSE

[menu __main __resume]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Resume print
index: 2
gcode:    
    _LED_BLIK
    RESUME
	
[menu __main __abort]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel print
index: 3
gcode:    
    _LED_BLIK
    CANCEL_PRINT
	

[menu __main __Network]
type: list
name: Network

#############################################################################################################
### MENU MAINSAIL ###
#############################################################################################################
[menu __main __mainsail __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause print
gcode:   
    _LED_BLIK
    PAUSE

[menu __main __mainsail __resume]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Resume print
gcode:    
    _LED_BLIK
    RESUME

[menu __main __mainsail __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Cancel print
gcode:    
    _LED_BLIK
    CANCEL_PRINT

#############################################################################################################
### MENU CONTROL ###
#############################################################################################################
[menu __main __control __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home
gcode:    
  _LED_BLIK
  G28

[menu __main __control __homez]
type: command
enable: False
name: Home Z
gcode:    
  _LED_BLIK
  G28 Z

[menu __main __control __homexy]
type: command
enable: False
name: Home X/Y
gcode:    
  _LED_BLIK 
  G28 X Y

[menu __main __control __disable]
type: command
name: Disable steppers
gcode:    
  _LED_BLIK
    M84
    M18

[menu __main __control __fanonoff]
type: input
enable: {'fan' in printer}
name: Vent.: {'ON' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:   
  _LED_BLIK
    M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan. RPM.: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:   
  _LED_BLIK
   M106 S{'%d' % (menu.input*255)}

[menu __main __control __LED]
type: input
enable: {'output_pin _led_osvetleni' in printer}
name: White LED Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin _led_osvetleni'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:   
  _LED_BLIK
    SET_PIN PIN=_led_osvetleni VALUE={1 if menu.input else 0}
    SPECTODA_EVENT LABEL=light TYPE=percentage VALUE={100 if menu.input else 0}


[menu __main __control __LED]
type: input
enable: {'output_pin _led_osvetleni' in printer}
name: White LED Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin _led_osvetleni'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.1
gcode:   
  _LED_BLIK
    SET_PIN PIN=_led_osvetleni VALUE={menu.input}
    SPECTODA_EVENT LABEL=light TYPE=percentage VALUE={menu.input*100}

[menu __main __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE 10mm

[menu __main __control __move_10mm __axis_x]
type: input
name: MOVE X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:    
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type: input
name: MOVE Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

    
[menu __main __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

    
[menu __main __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis
 
[menu __main __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE 1mm

[menu __main __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:    
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type: input
name: MOVE Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:  
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE 0.1mm

[menu __main __control __move_01mm __axis_x]
type: input
name: MOVE X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type: input
name: MOVE Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:    _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: MOVE E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:   
  _LED_BLIK
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

#############################################################################################################
### MENU SDCARD ###
#############################################################################################################

[menu __main __sdcard __start]
type: command
enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name: START print
gcode:    
  _LED_BLIK
  M24

[menu __main __sdcard __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume print
gcode:    
    _LED_BLIK
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __main __sdcard __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause print
gcode:    
    _LED_BLIK
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __main __sdcard __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel print
gcode:   
    _LED_BLIK
        CANCEL_PRINT
		
#############################################################################################################
### MENU SETUP ###
#############################################################################################################

[menu __main __setup __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Orange Pi Shutdown
gcode:    
        {action_call_remote_method("shutdown_machine")}

[menu __main __setup __save_config]
type: command
name: Save config
gcode:    
  _LED_BLIK
  SAVE_CONFIG

[menu __main __setup __restart]
type: list
name: Restart 

[menu __main __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: OrangePi reboot
gcode:    
  RESTART

[menu __main __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
gcode:   
  _LED_BLIK 
  FIRMWARE_RESTART


[menu __main __setup __tuning]
type: list
enable: false
name: PID kalib.


[menu __main __setup __calib]
type: list
name: Kalibration

[menu __main __setup __calib __bedprobe]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Z offset calibration
gcode:    
  _LED_BLIK 
  I_z_offset_calibration]

[menu __main __setup __calib __hotend_PID]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Hotend PID
gcode:    
  _LED_BLIK 
  II_PID_HOTEND

[menu __main __setup __calib __hotbed_PID]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Bed PID
gcode:   
  _LED_BLIK 
  III_PID_BED

[menu __main __setup __dump]
type: command
name: Dump parameters
gcode:   
  _LED_BLIK
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

#############################################################################################################
### MENU TUNE ###
#############################################################################################################

[menu __main __tune __speed]
type: input
name: SPEED: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:    
    _LED_BLIK
    M220 S{'%d' % (menu.input*100)}


[menu __main __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:   
    _LED_BLIK
    M221 S{'%d' % (menu.input*100)}


[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.002
realtime: True
gcode:    
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

#############################################################################################################
### MENU TEMP ###
#############################################################################################################

[menu __main __temp __hotend0_target]
type: input
index: 1
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode:   
  _LED_BLIK 
  M104 T0 S{'%.0f' % menu.input}


[menu __main __temp __hotbed_target]
type: input
index: 3
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode:   
  _LED_BLIK 
  M140 S{'%.0f' % menu.input}

[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA
index: 4

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat ALL
gcode:    
  _LED_BLIK
    M140 S60
    M104 S200

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode:    
  _LED_BLIK 
  M104 S200

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat bed
gcode:    
  _LED_BLIK
  M140 S60

[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS
enable: True

[menu __main __temp __preheat_petg]
type: list
name: Preheat PETG
index: 5

[menu __main __temp __preheat_petg __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat vse
gcode:   
  _LED_BLIK
    M140 S70
    M104 S230

[menu __main __temp __preheat_petg __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode:   
  _LED_BLIK
  M104 S230

[menu __main __temp __preheat_petg __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat bed
gcode:    
  _LED_BLIK 
  M140 S70

[menu __main __temp __cooldown]
type: list
index: 6
name: COOLDOWN

[menu __main __temp __cooldown __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: COOLDOWN ALL
gcode:    
	_LED_BLIK
    M104 S0
    M140 S0

[menu __main __temp __cooldown __hotend]
type: command
enable: {'extruder' in printer}
name: COOLDOWN hotend
gcode:    
  _LED_BLIK 
  M104 S0

[menu __main __temp __cooldown __hotbed]
type: command
enable: {'heater_bed' in printer}
name: COOLDOWN BED
gcode:   
  _LED_BLIK 
  M140 S0

#############################################################################################################
### MENU FILAMENT ###
#############################################################################################################

[menu __main __filament __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode:    
  _LED_BLIK
  M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type: command
name: LOAD FILAMENT
gcode:    
  _LED_BLIK
    LOAD_FILAMENT

[menu __main __filament __unloadf]
type: command
name: UNLOAD FILAMENT
gcode:   
  _LED_BLIK
    UNLOAD_FILAMENT

[menu __main __filament __change]
type: command
name: CHANGE FILAMENT
gcode:   
  _LED_BLIK
    M600

[menu __main __filament __loads]
type: command
enable: false
name: Load Fil. slow
gcode:   
  _LED_BLIK
    LOAD_FILAMENT

[menu __main __filament __unloads]
type: command
enable: false
name: Unload Fil
gcode:    
  _LED_BLIK
    UNLOAD_FILAMENT

[menu __main __filament __feed]
type: input
name: EXTRUDE mm: {'%.1f' % menu.input}
input: 5
enable: false
input_step: 1
gcode:  
  _LED_BLIK
    LOAD_FILAMENT

#############################################################################################################
### MIX ###
############################################################################################################# 
   
[output_pin _led_osvetleni]
pin: PA14
pwm: True
value: 1
cycle_time: 0.0100

[gcode_macro _LED_BLIK]
gcode:    
  LED_BLINK
  M300
  
#############################################################################################################
### MENU NETWORK ###
#############################################################################################################

[menu __main __Network _hostname]
type: command
name: Hostname: {printer.network_status.mdns}

[menu __main __Network _eth_ip]
type: command
name: Eth IP: {printer.network_status.ethip}

[menu __main __Network _wifi_ssid]
type: command
name: Wifi SSID: {printer.network_status.wifissid}

[menu __main __Network _wifi_ip]
type: command
name: Wifi IP: {printer.network_status.wifiip}